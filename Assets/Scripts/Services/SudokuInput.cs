//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/SudokuInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace EcsSudoku.Services
{
    public partial class @SudokuInput : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }

        public @SudokuInput()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""SudokuInput"",
    ""maps"": [
        {
            ""name"": ""Sudoku"",
            ""id"": ""9f7e0a44-f97a-4f23-85fe-6ae21a97ff37"",
            ""actions"": [
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""d4587e52-bd3a-41d0-a856-7bcdbfae6fd5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""919b03fe-3381-4b54-981c-cdaadf2639d8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbf64e0a-e378-4f5f-85e2-08cd12fba1fb"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Sudoku
            m_Sudoku = asset.FindActionMap("Sudoku", throwIfNotFound: true);
            m_Sudoku_Click = m_Sudoku.FindAction("Click", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Sudoku
        private readonly InputActionMap m_Sudoku;
        private ISudokuActions m_SudokuActionsCallbackInterface;
        private readonly InputAction m_Sudoku_Click;

        public struct SudokuActions
        {
            private @SudokuInput m_Wrapper;

            public SudokuActions(@SudokuInput wrapper)
            {
                m_Wrapper = wrapper;
            }

            public InputAction @Click => m_Wrapper.m_Sudoku_Click;

            public InputActionMap Get()
            {
                return m_Wrapper.m_Sudoku;
            }

            public void Enable()
            {
                Get().Enable();
            }

            public void Disable()
            {
                Get().Disable();
            }

            public bool enabled => Get().enabled;

            public static implicit operator InputActionMap(SudokuActions set)
            {
                return set.Get();
            }

            public void SetCallbacks(ISudokuActions instance)
            {
                if (m_Wrapper.m_SudokuActionsCallbackInterface != null)
                {
                    @Click.started -= m_Wrapper.m_SudokuActionsCallbackInterface.OnClick;
                    @Click.performed -= m_Wrapper.m_SudokuActionsCallbackInterface.OnClick;
                    @Click.canceled -= m_Wrapper.m_SudokuActionsCallbackInterface.OnClick;
                }

                m_Wrapper.m_SudokuActionsCallbackInterface = instance;
                if (instance != null)
                {
                    @Click.started += instance.OnClick;
                    @Click.performed += instance.OnClick;
                    @Click.canceled += instance.OnClick;
                }
            }
        }

        public SudokuActions @Sudoku => new SudokuActions(this);

        public interface ISudokuActions
        {
            void OnClick(InputAction.CallbackContext context);
        }
    }
}